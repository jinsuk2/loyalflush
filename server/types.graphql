# The following types define the data model of the example service
# based on which the GraphQL API is generated

type User @model {
  id: ID! @isUnique
  name: String!
  email: String! @isUnique
  sns: String
  userReviews: [Review] @relation(name:"UserReviews")
  handicap: Boolean
  gender: String

  # Uncomment below - you can declare relations between models like this

  # posts: [Post!]! @relation(name: "UserPosts")
}

type Washroom @model {
  id: ID! @isUnique
  name: String
  stall: Int
  building: Building @relation (name:"WashroomBuilding")
  listOfPhotos: [contentType] @relation (name:"WashroomPhotos")
  listOfReviews: [Review] @relation (name:"WashroomReviews")
  instruction: String
}

type Review @model {
  id: ID! @isUnique
  userid: ID!
  washroomId: ID!
  rating0: Int!
  rating1: Int!
  raiting2: Int!
  time: DateTime!
  comment: String
}

type Building @model {
  id: ID! @isUnique
  name: String
  address: String
  locationLat: Float
  locationLong: Float
  hoursFrom: DateTime
  hoursTo: DateTime
  type: String
}


# Uncomment the model below as well

# type Post @model {
#   id: ID! @isUnique
#   title: String!
#
#   # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
#   author: User! @relation(name: "UserPosts")
# }
